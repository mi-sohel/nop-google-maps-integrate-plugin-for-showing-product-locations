@{
    Html.AddCssFileParts("~/Plugins/Widgets.BsProductLocation/Content/styles.css");
}
@model ProductLocationRecordModel
@using Nop.Core.Infrastructure
@using Nop.Plugin.Widgets.BsProductLocation.Models;
@using Nop.Web.Framework;
@using Nop.Web.Framework.UI;
<div class="content">
    @using (Html.BeginForm())
    {
        @Html.ValidationSummary(false)
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.ProductId)
        <div class="content-header clearfix">
            <h1 class="pull-left">
               
                @Html.ActionLink("(" + "BackToList" + ")", "List")
            </h1>
            <div class="pull-right">

                <button type="submit" name="save" class="btn bg-blue">
                    <i class="fa fa-floppy-o"></i>
                    @T("Admin.Common.Save")
                </button>

            </div>
        </div>
        <div class="panel-group">
            <div class="panel panel-default">
                <div class="panel-heading">
                    @T("Admin.Common.AddNew")
                </div>
                <div class="panel-body">
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.Latitude)
                        </div>
                        <div class="col-md-9">
                            @Html.NopEditorFor(model => model.Latitude)
                            @Html.ValidationMessageFor(model => model.Latitude)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.Longitude)
                        </div>
                        <div class="col-md-9">
                            @Html.NopEditorFor(model => model.Longitude)
                            @Html.ValidationMessageFor(model => model.Longitude)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.NopLabelFor(model => model.ServiceAreaId)
                        </div>
                        <div class="col-md-9">
                            @Html.NopDropDownListFor(model => model.ServiceAreaId,Model.AvailableServiceAreas)
                            @Html.ValidationMessageFor(model => model.ServiceAreaId)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-9 col-md-offset-3">
                            <input type="submit" name="save" class="btn btn-primary" value="@T("Admin.Common.Save")" />

                        </div>
                    </div>
                </div>
            </div>
        </div>



    }
    <div>
        <script>
            $(document).ready(function() {

                $("form").attr("id", "product-location-form");
            });
        </script>
        @DtaGrid()
    </div>
    @helper DtaGrid()
{
    var defaultGridPageSize = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().DefaultGridPageSize;
    var gridPageSizes = EngineContext.Current.Resolve<Nop.Core.Domain.Common.AdminAreaSettings>().GridPageSizes;

    <div class="panel panel-default">
        <div class="panel-body">


            <div id="producslocationrecords-grid"></div>

            <script>
                $(document).ready(function() {
                    $("#producslocationrecords-grid").kendoGrid({
                        dataSource: {
                            type: "json",
                            transport: {
                                read: {
                                    url: "@Html.Raw(Url.Action("ProductLocationRecordList", "ProductLocation", new { productId = Model.ProductId }))",
                                    type: "POST",
                                    dataType: "json",
                                    data: addAntiForgeryToken
                                },
                                update: {
                                    url: "@Html.Raw(Url.Action("ProductLocationRecordUpdate", "ProductLocation", new RouteValueDictionary { { "Namespaces", "Nop.Plugin.Widgets.BsProductLocation.Controllers" }, { "area", "" } }))",
                                    type: "POST",
                                    dataType: "json",
                                    data: addAntiForgeryToken
                                },
                                destroy: {
                                    url: "@Html.Raw(Url.Action("ProductLocationRecordDelete", "ProductLocation", new RouteValueDictionary { { "Namespaces", "Nop.Plugin.Widgets.BsProductLocation.Controllers" }, { "area", "" } }))",
                                    type: "POST",
                                    dataType: "json",
                                    data: addAntiForgeryToken
                                },
                            },
                            schema: {
                                data: "Data",
                                total: "Total",
                                errors: "Errors",
                                model: {
                                    id: "Id",
                                    fields: {
                                        Id: { editable: false, type: "number" },
                                        ProductId: { editable: false, type: "number" },
                                        ServiceAreaId:{editable: false, type: "number"},
                                        ServiceAreaName:{editable: false, type: "string"},
                                         Longitude: { editable: true, type: "double" },
                                         Latitude: { editable: true, type: "double" },
                                       
                                    }
                                }
                            },
                            requestEnd: function(e) {
                                if (e.type == "update") {
                                    this.read();
                                }
                            },
                            error: function(e) {
                                display_kendoui_grid_error(e);
                                // Cancel the changes
                                this.cancelChanges();
                            },
                            pageSize: @(defaultGridPageSize),
                            serverPaging: true,
                            serverFiltering: true,
                            serverSorting: true
                        },
                        pageable: {
                            refresh: true,
                            pageSizes: [@(gridPageSizes)]
                        },
                        editable: {
                            confirmation: false,
                            mode: "inline"
                        },
                        scrollable: false,
                        columns: [{
                            field: "Id",
                            title: "ID",
                            width: 50,

                        }
                            ,{
                                field: "ProductId",
                                title: "ProductId",
                                width: 100,
                            },

                            {
                                field: "Latitude",
                                title: "Latitude",
                                width: 100
                            },
                            {
                                field: "Longitude",
                                title: "Longitude",
                              
                                width: 100
                            },
                            {
                                field: "ServiceAreaId",
                                title: "ServiceAreaName",
                                template:"<span>#=ServiceAreaName#<span/>",
                                width: 150
                                

                            },
                            {
                                command: [{
                                    name: "edit",
                                    text: "@T("Admin.Common.Edit")"
                                }, {
                                    name: "destroy",
                                    text: "@T("Admin.Common.Delete")"
                                }],
                                width: 200
                            }]
                    });
                });
            </script>
        </div>
    </div>
}
</div>